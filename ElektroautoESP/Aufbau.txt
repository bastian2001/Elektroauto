Pins verfügbar:
0,	1,	2,	3,	4,	12,	13,	14,	15,	16
TX	DMP	RX			SDA	SCL	ESC

request:
c (control)
!: separator
a: armed (0/1)
or m/v combo:
m: mode (0(throttle)/1(rpm)/2(slip))
v: value (0...2000, 0...2000, 0...20)
example: s!a1, s!m0!v2000
- or system message -
s(system)
!: separator
d: device type (0(web)/1(app))
t: telemetry (0/1)
example: c!d1!t1


response:
a: armed
m: mode
t: throttle
r: rps
s: slip
v: velocity (mpu)
w: velocity (wheels)
e: acceleration (mpu)
u: voltage (cV)
c: current (cA)
p: temperature (°C)

example: a0!m0!t0!r0!s0!v0!w0!e0!u740!c3!p30

core1 - loop:	---
MPU
core1 - ir:	---
core0 - loop:	---
WiFi
Serial
core0 - ir:	---
ESCir --> calc
(HSir)

Definition Schlupf: (vRad-vAuto)/vRad

rpm control formula:
d_rpm=thr_soll-thr_pred
d_thr=d_rpm³*.00000015+d_rpm²*.000006+d_rpm*.006 (each ms)

logging on RAM:
every esc cycle (1000Hz) for 5000 frames:
uint16_t[] throttle - 10KB (before +47)
int16_t[] acceleration(MPU) - 10KB
uint16_t[] wheel rps - 10KB
uint16_t[] voltage (from ESC) in cV - 10KB
uint16_t[] current (from ESC) in cA - 10KB
uint8_t[] temperature (from ESC) in °C - 5KB
total: 55KB

Transmission protocol:
packets of 20 frames, format:
i,[startPos];t,[commaSeparatedThrottleValuesAsString];e,[commaSeparatedAccelerationValuesAsString];r,[commaSeparatedRPSValuesAsString];u,[commaSeparatedVoltageValuesAsString];c,[commaSeparatedCurrentValuesAsString];p,[commaSeparatedTemperatureValuesAsString]
example: "i,1320;t,1932,1936,...;e,...;r,...;u,...;c,...;p,..."
on the other side: split(";") --> split(",") --> x[0] == type

ESC telemetry:
0-7: temp in °C
8-23: voltage in cV
24-39: current in cA
40-55: charge in mAh
56-71: erpm in ceRPM (with conversion)
72-79: CRC
